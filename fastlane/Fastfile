# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.14.2"

default_platform :ios

platform :ios do
  before_all do
   # git_pull
   # cocoapods
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    
    
  end

  desc "Runs all the tests"
  lane :test do
    git_pull
  end

  desc "Bump build number, commit & push to remote"
  lane :incrementBuildNumber do

    # Bump build number
    increment_build_number

    # Commit and push to remote
    commit_version_bump(
      message: 'Build number bump by fastlane - buildnumber lane',
      force: true
    )
    push_to_git_remote

  end

  desc "Increment the version number of your project"
  lane :incrementVersionNumber do

    # Bump build number
    increment_version_number(
     version_number: "2.1.1" # Set a specific version number
    )


    # Commit and push to remote
    commit_version_bump(
      message: 'Build number bump by fastlane - buildnumber lane',
      force: true
    )
    push_to_git_remote

  end

  desc "Add git tag, commit & push to remote"
  lane :addGitTag do 
  # Alternatively, you can specify your own tag. Note that if you do specify a tag, all other arguments are ignored.
    if !git_tag_exists(tag: "6.93")
     add_git_tag(
        tag: "6.93"
     )

     push_git_tags
    end   
    
  end

  desc "Easily build and sign your app using gym"
  lane :buildApp do 

    gym(
      workspace: "Fast.xcworkspace",
      configuration: "Debug",
      scheme: "Fast",
      silent: true,
      clean: true,
      output_directory: "/Users/longnd9/FastlaneExample/Gym", # Destination directory. Defaults to current directory.
      output_name: "my-app.ipa",       # specify the name of the .ipa file to generate (  including file extension)
      # sdk: "10.0"  # use SDK as the name or path of the base SDK when building the project.
    )

    install_on_device(
     device_id: "6f841ffaa95a8b611fb823f5b52e4ff50c44d644",
     ipa: "/Users/longnd9/FastlaneExample/Gym/my-app.ipa"
    )
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
  //
  match(type: "appstore") # more information: https://codesigning.guide	

	increment_build_number

  add_git_tag(prefix: get_version_number + "/", build_number: get_build_number)
	cert
  gym(scheme: "Fast") # Build your app - more options available
		
  pilot(skip_waitting_for_build_processing: true)

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    gym(scheme: "Fast") # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used mailgun
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
